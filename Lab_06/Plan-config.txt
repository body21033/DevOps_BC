PS C:\Terraform> terraform apply  

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following    
symbols:
  + create

Terraform will perform the following actions:

  # module.AWS.aws_instance.AWS-1 will be created
  + resource "aws_instance" "AWS-1" {
      + ami                                  = "ami-0b81e95bb0a06ea8c"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "bodya"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags_all                             = (known after apply)
      + tenancy                              = (known after apply)
      + user_data                            = "YOUR_DATA)"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + private_dns_name_options {
          + enable_resource_name_dns_a_record    = (known after apply)
          + enable_resource_name_dns_aaaa_record = (known after apply)
          + hostname_type                        = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # module.AWS.aws_key_pair.security_aws will be created
  + resource "aws_key_pair" "security_aws" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "bodya"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-rsa = YOUR_KEY)"
      + tags_all        = (known after apply)
    }

  # module.Azure.azurerm_linux_virtual_machine.azure_vm will be created
  + resource "azurerm_linux_virtual_machine" "azure_vm" {
      + admin_username                  = "uran238"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "azure-vm"
      + network_interface_ids           = (known after apply)
      + patch_mode                      = "ImageDefault"
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "azure-resource-group"
      + size                            = "Standard_B1s"
      + user_data                       = "YOUR_DATA)"
      + virtual_machine_id              = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAA-YOUR-KEY)
            EOT
          + username   = "uran238"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-jammy"
          + publisher = "Canonical"
          + sku       = "22_04-lts"
          + version   = "latest"
        }

      + termination_notification {
          + enabled = (known after apply)
          + timeout = (known after apply)
        }
    }

  # module.Azure.azurerm_network_interface.azure_network will be created
  + resource "azurerm_network_interface" "azure_network" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "azure-network-interface"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "azure-resource-group"
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "internal"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # module.Azure.azurerm_network_interface_security_group_association.connection will be created
  + resource "azurerm_network_interface_security_group_association" "connection" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # module.Azure.azurerm_network_security_group.azure_network_security_group will be created
  + resource "azurerm_network_security_group" "azure_network_security_group" {
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "azure-network-security-group"
      + resource_group_name = "azure-resource-group"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 100
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "HTTP"
              + priority                                   = 101
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # module.Azure.azurerm_public_ip.azure_public_ip will be created
  + resource "azurerm_public_ip" "azure_public_ip" {
      + allocation_method       = "Static"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westeurope"
      + name                    = "azure-public-ip"
      + resource_group_name     = "azure-resource-group"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # module.Azure.azurerm_resource_group.azure_resource_group will be created
  + resource "azurerm_resource_group" "azure_resource_group" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "azure-resource-group"
    }

  # module.Azure.azurerm_subnet.azure_subnet will be created
  + resource "azurerm_subnet" "azure_subnet" {
      + address_prefixes                               = [
          + "10.0.10.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "azure-subnet"
      + resource_group_name                            = "azure-resource-group"
      + virtual_network_name                           = "azure-virtual-network"
    }

  # module.Azure.azurerm_virtual_network.azure_virtual_network will be created
  + resource "azurerm_virtual_network" "azure_virtual_network" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "azure-virtual-network"
      + resource_group_name = "azure-resource-group"
      + subnet              = (known after apply)
    }

Plan: 10 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.AWS.aws_key_pair.security_aws: Creating...
module.AWS.aws_key_pair.security_aws: Creation complete after 1s [id=bodya]
module.AWS.aws_instance.AWS-1: Creating...
module.AWS.aws_instance.AWS-1: Still creating... [10s elapsed]
module.Azure.azurerm_resource_group.azure_resource_group: Creating...
module.Azure.azurerm_resource_group.azure_resource_group: Creation complete after 1s [id=/subscriptions/YOUR_SUB)/resourceGroups/azure-resource-group]
module.Azure.azurerm_virtual_network.azure_virtual_network: Creating...
module.Azure.azurerm_public_ip.azure_public_ip: Creating...
module.Azure.azurerm_network_security_group.azure_network_security_group: Creating...
module.Azure.azurerm_public_ip.azure_public_ip: Creation complete after 2s [id=/subscriptions/YOUR_ID)/resourceGroups/azure-resource-group/providers/Microsoft.Network/publicIPAddresses/azure-public-ip]
module.Azure.azurerm_virtual_network.azure_virtual_network: Creation complete after 4s [id=/subscriptions/YOUR_SUB)/resourceGroups/azure-resource-group/providers/Microsoft.Network/virtualNetworks/azure-virtual-network]
module.Azure.azurerm_subnet.azure_subnet: Creating...
module.Azure.azurerm_network_security_group.azure_network_security_group: Creation complete after 4s [id=/subscriptions/YOUR_ID)/resourceGroups/azure-resource-group/providers/Microsoft.Network/networkSecurityGroups/azure-network-security-group]
module.Azure.azurerm_subnet.azure_subnet: Creation complete after 4s [id=/subscriptions/YOUR_SUB)/resourceGroups/azure-resource-group/providers/Microsoft.Network/virtualNetworks/azure-virtual-network/subnets/azure-subnet]
module.Azure.azurerm_network_interface.azure_network: Creating...
module.AWS.aws_instance.AWS-1: Still creating... [20s elapsed]
module.Azure.azurerm_network_interface.azure_network: Creation complete after 1s [id=/subscriptions/YOUR_SUB)/resourceGroups/azure-resource-group/providers/Microsoft.Network/networkInterfaces/azure-network-interface]
module.Azure.azurerm_network_interface_security_group_association.connection: Creating...
module.Azure.azurerm_linux_virtual_machine.azure_vm: Creating...
module.Azure.azurerm_network_interface_security_group_association.connection: Creation complete after 1s [id=/subscriptions/YOUR_SUB)/resourceGroups/azure-resource-group/providers/Microsoft.Network/networkInterfaces/azure-network-interface|/subscriptions/112ccbd3-9026-4734-bfb0-d64d2316b8fe/resourceGroups/azure-resource-group/providers/Microsoft.Network/networkSecurityGroups/azure-network-security-group]
module.AWS.aws_instance.AWS-1: Still creating... [30s elapsed]
module.Azure.azurerm_linux_virtual_machine.azure_vm: Still creating... [10s elapsed]
module.AWS.aws_instance.AWS-1: Creation complete after 32s [id=i-09b523bfbb75f149e]
module.Azure.azurerm_linux_virtual_machine.azure_vm: Still creating... [20s elapsed]
module.Azure.azurerm_linux_virtual_machine.azure_vm: Still creating... [30s elapsed]
module.Azure.azurerm_linux_virtual_machine.azure_vm: Still creating... [40s elapsed]
module.Azure.azurerm_linux_virtual_machine.azure_vm: Creation complete after 48s [id=/subscriptions/YOUR_SUB)/resourceGroups/azure-resource-group/providers/Microsoft.Compute/virtualMachines/azure-vm]

Apply complete! Resources: 10 added, 0 changed, 0 destroyed.
PS C:\Terraform> 